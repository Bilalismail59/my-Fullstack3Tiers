name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure DNS
        run: |
          echo "nameserver 8.8.8.8" | sudo tee /etc/resolv.conf > /dev/null
          echo "nameserver 8.8.4.4" | sudo tee -a /etc/resolv.conf > /dev/null

      - name: Login to Docker Hub
        run: |
          mkdir -p ~/.docker
          echo '{"auths":{"https://index.docker.io/v1/":{"auth":"'$(echo -n "${{ secrets.DOCKERHUB_USERNAME }}:${{ secrets.DOCKERHUB_PASSWORD }}" | base64 | tr -d '\n')'"}}}' > ~/.docker/config.json

      - name: Build & Push Frontend
        uses: docker/build-push-action@v4
        with:
          context: frontend
          file: frontend/Dockerfile
          push: true
          tags: ${{(secrets.DOCKERHUB_USERNAME) }}/frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Verify network connectivity
        run: |
          ping -c 3 docker.io
          curl -v https://index.docker.io/v2/

  preprod:
    name: Deploy to Preprod
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}
            cd /path/to/preprod
            git pull origin develop
            docker compose pull
            docker compose up -d --remove-orphans

  prod:
    name: Deploy to Production
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Set up Kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f prod/k8s/
          kubectl rollout status deployment/frontend --timeout=300s
          kubectl rollout status deployment/backend --timeout=300s