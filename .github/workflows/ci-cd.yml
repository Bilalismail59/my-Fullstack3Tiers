name: AKS Deployment Pipeline

on:
  push:
    branches: [main]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - 'k8s/**'
      - '.github/workflows/ci-cd.yml'

env:
  DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USERNAME }}
  FRONTEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/frontend
  BACKEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/backend
  K8S_NAMESPACE: production
  CLUSTER_NAME: fullstack3tiers-aks
  RESOURCE_GROUP: fullstack3tiers-rg
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build & Push Frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ env.FRONTEND_IMAGE }}:${{ github.sha }}

      - name: Build & Push Backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ env.BACKEND_IMAGE }}:${{ github.sha }}

  production:
    name: Deploy to AKS
    needs: build
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      #- name: Azure Login
      #  uses: azure/login@v1
      #  with:
      #    creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      #- name: Get AKS credentials
      #  run: |
      #    az aks get-credentials \
      #      --resource-group ${{ env.RESOURCE_GROUP }} \
      #      --name ${{ env.CLUSTER_NAME }} \
      #      --overwrite-existing

      - name: Deploy to AKS
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config
          # Apply all Kubernetes manifests
          kubectl apply -f k8s/ -n ${{ env.K8S_NAMESPACE }} --server-side --validate=true
          
          # Update images
          kubectl set image deployment/frontend \
            frontend=${{ env.FRONTEND_IMAGE }}:${{ github.sha }} -n ${{ env.K8S_NAMESPACE }}
          
          kubectl set image deployment/backend \
            backend=${{ env.BACKEND_IMAGE }}:${{ github.sha }} -n ${{ env.K8S_NAMESPACE }}

          # Verify deployments
          kubectl rollout status deployment/frontend -n ${{ env.K8S_NAMESPACE }} --timeout=10m
          kubectl rollout status deployment/backend -n ${{ env.K8S_NAMESPACE }} --timeout=10m

          # Show resources
          kubectl get pods,svc,ingress -n ${{ env.K8S_NAMESPACE }}